{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ProgramsComponent = class ProgramsComponent {\n  constructor(_program) {\n    this._program = _program;\n    this.programsList = [];\n    this.isLoading = false;\n    this.showSystemError = false;\n  }\n  ngOnInit() {\n    this.getPrograms();\n  }\n  getPrograms() {\n    //  use this to show loading spinner \n    this.isLoading = true;\n    this._program.getPrograms().subscribe({\n      next: response => {\n        this.programsList = response;\n        this.isLoading = false;\n      },\n      error: err => {\n        // show alert message with error\n        this.isLoading = false;\n        this.showSystemError = true;\n      }\n    });\n  }\n};\nProgramsComponent = __decorate([Component({\n  selector: 'app-programs',\n  templateUrl: './programs.component.html',\n  styleUrls: ['./programs.component.scss']\n})], ProgramsComponent);","map":{"version":3,"names":["Component","ProgramsComponent","constructor","_program","programsList","isLoading","showSystemError","ngOnInit","getPrograms","subscribe","next","response","error","err","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\study angular\\TaskTest\\src\\app\\programs\\programs.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ProgramsService } from '../services/programs.service';\r\nimport { Programs } from '../programs';\r\n\r\n@Component({\r\n  selector: 'app-programs',\r\n  templateUrl: './programs.component.html',\r\n  styleUrls: ['./programs.component.scss']\r\n})\r\nexport class ProgramsComponent {\r\n  public programsList: Programs[] = [];\r\n  public isLoading: boolean = false\r\n  public showSystemError: boolean = false;\r\n\r\n  constructor(private _program: ProgramsService) { }\r\n  ngOnInit(): void {\r\n    this.getPrograms()\r\n  }\r\n\r\n  getPrograms() {\r\n    //  use this to show loading spinner \r\n    this.isLoading = true;\r\n\r\n    this._program.getPrograms().subscribe({\r\n      next: (response) => {\r\n\r\n        this.programsList = response;\r\n        this.isLoading = false;\r\n\r\n      },\r\n      error: (err) => {\r\n        // show alert message with error\r\n        this.isLoading = false;\r\n        this.showSystemError = true;\r\n\r\n\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n}\r\n\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAoBC,QAAyB;IAAzB,KAAAA,QAAQ,GAARA,QAAQ;IAJrB,KAAAC,YAAY,GAAe,EAAE;IAC7B,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,eAAe,GAAY,KAAK;EAEU;EACjDC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA;IACT;IACA,IAAI,CAACH,SAAS,GAAG,IAAI;IAErB,IAAI,CAACF,QAAQ,CAACK,WAAW,EAAE,CAACC,SAAS,CAAC;MACpCC,IAAI,EAAGC,QAAQ,IAAI;QAEjB,IAAI,CAACP,YAAY,GAAGO,QAAQ;QAC5B,IAAI,CAACN,SAAS,GAAG,KAAK;MAExB,CAAC;MACDO,KAAK,EAAGC,GAAG,IAAI;QACb;QACA,IAAI,CAACR,SAAS,GAAG,KAAK;QACtB,IAAI,CAACC,eAAe,GAAG,IAAI;MAG7B;KACD,CAAC;EAEJ;CAED;AAhCYL,iBAAiB,GAAAa,UAAA,EAL7Bd,SAAS,CAAC;EACTe,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWhB,iBAAiB,CAgC7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}